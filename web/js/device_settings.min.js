/*
 * MIT License
 *
 * Copyright (c) 2018 Krzysztof "RouNdeL" Zdulski
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */
const MIN_UPDATE_DELAY=500;const UPDATE_URL="/api/save_device.php";$(function(){let e=Date.now();let t=0;let n=0;let a=0;$(".checkbox-switch").bootstrapSwitch().on("switchChange.bootstrapSwitch",c);$(".color-picker-init").on("changeColor",function(e){$(this).find("input").val(e.value);c(e)}).colorpicker({useAlpha:false,inline:true,container:true,customClass:"colorpicker-big",format:"hex",sliders:{saturation:{maxLeft:150,maxTop:150},hue:{maxTop:150},alpha:{maxTop:150}}});$(".change-listen").change(c);function i(e){const t={};for(let n=0;n<e.length;n++){t[e[n].name]=e[n].value}return t}
/**
     *
     * @param {String} id
     */function o(e){const a=$(`.device-parent[data-device-id="${e}"]`);const o=i(a.find("form").serializeArray());o["device_id"]=e;a.find("input[type=checkbox]").each(function(){o[$(this).attr("name")]=$(this)[0].checked});t=Date.now();$.ajax(UPDATE_URL,{method:"POST",dataType:"json",contentType:"application/json",data:JSON.stringify(o)}).done(function(e){n=Date.now()-t})}
/**
     *
     * @param {Event} e
     */function c(t){let i=Math.max(MIN_UPDATE_DELAY,2*n);if(Date.now()>e+i){if(t!==undefined&&t.target!==undefined){const e=$(t.target).parents(".device-parent").data("device-id");o(e)}else{$(".device-parent").each(function(){o($(this).data("device-id"))})}e=Date.now()}else{clearTimeout(a);a=setTimeout(c,e+MIN_UPDATE_DELAY-Date.now())}}});