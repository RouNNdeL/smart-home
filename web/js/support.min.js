/*
 * MIT License
 *
 * Copyright (c) 2018 Krzysztof "RouNdeL" Zdulski
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

"use strict";function getTiming(n){if(n<0||n>255){return 0}if(n<=80){return n/16}if(n<=120){return n/8-5}if(n<=160){return n/2-50}if(n<=190){return n-130}if(n<=235){return 2*n-320}if(n<=245){return 15*n-3375}return 60*n-14400}function convertToTiming(n){const r=getTimings();if(n<0)return 0;for(let t=0;t<r.length;t++){if(n<r[t])return t-1}return 255}function getTimings(){const n=[];for(let r=0;r<256;r++){n[r]=getTiming(r)}return n}function getIncrementTiming(n){if(n<0||n>255){return 0}if(n<=60){return n/2}if(n<=90){return n-30}if(n<=126){return 5*n/2-165}if(n<=156){return 5*n-480}if(n<=196){return 15*n-2040}if(n<=211){return 60*n-10860}if(n<=253){return 300*n-61500}if(n===254)return 18e3;return 21600}function convertIncrementToTiming(n){const r=getIncrementTimings();if(n<0)return 0;for(let t=0;t<r.length;t++){if(n<r[t])return t-1}return 255}function getIncrementTimings(){const n=[];for(let r=0;r<256;r++){n[r]=getIncrementTiming(r)}return n}